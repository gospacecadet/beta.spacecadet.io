{"version":3,"sources":["meteor://ðŸ’»app/server/slingshot/property-directives.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,UAAU,GAAG,CACf,EAAC,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,YAAY,EAAC,EAChD,EAAC,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,aAAa,EAAC,EAClD,EAAC,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,aAAa,EAAC,CACnD;;AAED,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,UAAS,SAAS,EAAE;AACrC,WAAS,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,EAAE;AAC7D,UAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS;AACjC,OAAG,EAAE,aAAa;;AAElB,aAAS,EAAE,UAAU,IAAI,EAAE,WAAW,EAAE;AACtC,UAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,EAAE;AACvE,YAAI,OAAO,GAAG,mCAAmC,CAAC;AAClD,cAAM,IAAI,MAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;OACnD;;AAED,aAAO,IAAI,CAAC;KACb;;AAED,OAAG,EAAE,UAAU,IAAI,EAAE,WAAW,EAAE;AAChC,UAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACrC,UAAI,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC;AAC/C,aAAO,WAAW,GAChB,WAAW,CAAC,QAAQ,GACpB,SAAS,CAAC,IAAI,GACd,WAAW,CAAC,KAAK,GACjB,GAAG,GACH,SAAS;KACZ;GACF,CAAC,CAAC;CACJ,CAAC,uE","file":"/server/slingshot/property-directives.js","sourcesContent":["var directives = [\n  {name: \"PropertiesOriginal\", path: \"/original/\"},\n  {name: \"PropertiesOptimized\", path: \"/optimized/\"},\n  {name: \"PropertiesThumbnail\", path: \"/thumbnail/\"},\n]\n\n_.each(directives, function(directive) {\n  Slingshot.createDirective(directive.name, Slingshot.S3Storage, {\n    bucket: Meteor.settings.AWSBucket,\n    acl: \"public-read\",\n\n    authorize: function (file, metaContext) {\n      if (!Security.can(this.userId).insert({}).for(Mart.Storefronts).check()) {\n        var message = \"Please login before posting files\";\n        throw new Meteor.Error(\"Login Required\", message);\n      }\n\n      return true;\n    },\n\n    key: function (file, metaContext) {\n      let extensions = file.name.split(\".\")\n      let extension = extensions[extensions.length-1]\n      return \"stations/\" +\n        metaContext.objectId +\n        directive.path +\n        metaContext.index +\n        \".\" +\n        extension\n    }\n  });\n})\n"]}